/*Generated by DSLFORGE*/

grammar Statemachine;

options {
  language=JavaScript;
  output=AST;
  ASTLabelType=CommonTree;
}

@lexer::header {
}

@parser::header {
}




rule_Rule_Statemachine :
     
	('events' 
		events+=rule_Rule_Event+ 
	'end')?
	('resetEvents' 
		resetevents+=ID+ 
	'end')?
	('commands' 
		commands+=rule_Rule_Command+ 
	'end')?
	states+=rule_Rule_State*
 EOF!;




rule_Rule_Event:
	name=ID code=ID
;




rule_Rule_Command:
	name=ID code=ID
;




rule_Rule_State:
	'state' name=ID
		('actions' '{' actions+=ID+ '}')?
		transitions+=rule_Rule_Transition*
	'end'
;




rule_Rule_Transition:
	event=ID '=>' state=ID
;


ID : ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')* ;

STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

COMMENT : ('/*' .* '*/' | '//' ~('\r' | '\n')*)   { $channel = HIDDEN; } ;

WS:  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;} ;

//NUMBER: INT ('.' INT)?;

INT: ('0'..'9')+;

