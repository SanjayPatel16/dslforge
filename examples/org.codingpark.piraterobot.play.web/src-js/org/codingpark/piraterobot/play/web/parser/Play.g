/*Generated by DSLFORGE*/

grammar Play;

options {
  language=JavaScript;
  output=AST;
  ASTLabelType=CommonTree;
}

@lexer::header {
}

@parser::header {
}





rule_PlayModel:
	// For the moment only one. procedures+=Procedure*
	procedures+=rule_Procedure
 EOF!;




rule_Procedure:
	'procedure' name=ID '(' //parameters+=Parameter*   no parameters yet
	')' '{' actions+=rule_Action* '}'
;



	
rule_Action: 
	// we put num also in dig and fight just to add validation messages
	(isup='up' '(' (parametervalue = rule_ParameterValue)? ')') |
	(isright='right' '(' (parametervalue = rule_ParameterValue)? ')') |
	(isdown='down' '(' (parametervalue = rule_ParameterValue)? ')') |
	(isleft='left' '(' (parametervalue = rule_ParameterValue)? ')') |
	(isdig='dig' '(' (parametervalue = rule_ParameterValue)? ')') |
	(isjump='jump' '(' (parametervalue = rule_ParameterValue)? ')') |
	(isfight='fight' '(' (parametervalue = rule_ParameterValue)? ')') |
	(isrepeat='repeat' '(' (parametervalue = rule_ParameterValue)? ')' '{' actions+=rule_Action* '}')
;




rule_ParameterValue:
	// it will have expressions
	num = INT
;


ID : ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')* ;

STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

COMMENT : ('/*' .* '*/' | '//' ~('\r' | '\n')*)   { $channel = HIDDEN; } ;

WS:  (' '|'\r'|'\t'|'\u000C'|'\n') {$channel=HIDDEN;} ;

//NUMBER: INT ('.' INT)?;

INT: ('0'..'9')+;

