/*
 * generated by Xtext
 */
package org.xtext.example.generator

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.IFileSystemAccess
import org.eclipse.xtext.generator.IGenerator
import java.text.DateFormat
import java.text.SimpleDateFormat
import java.util.Date

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
class DomainmodelGenerator implements IGenerator {
	
	var String fileName
	
	override void doGenerate(Resource resource, IFileSystemAccess fsa) {
		fileName = resource.URI.lastSegment.replace("dmodel", "txt")
		var root = resource.contents.get(0)
		var DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
		val String date = dateFormat.format(new Date())
		fsa.generateFile(fileName, toTxt(root, date)) 
	}

	def toTxt(EObject root, String date) '''
	//This file has been generated from «fileName.replace("txt", "dmodel")»
	//
	// @date: «date»
	«root.eAllContents.toList.toString»
	'''

}
