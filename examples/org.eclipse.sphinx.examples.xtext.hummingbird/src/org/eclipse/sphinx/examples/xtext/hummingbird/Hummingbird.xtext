grammar org.eclipse.sphinx.examples.xtext.hummingbird.Hummingbird with org.eclipse.xtext.common.Terminals

generate hummingbird "http://www.eclipse.org/sphinx/examples/xtext/hummingbird/Hummingbird"


EntryPoint:
	Application | Platform
;


Application returns Application:
	'Application'
	name=ID
	'{'
		('description' description=Description)?
		'components' '{' components+=Component ( "," components+=Component)* '}'
    '}';

Component returns Component:
	{Component}
	'Component'
	name=ID
	'{'
		('type' type=[ComponentType|ID])?
		('incomingConnections' incomingConnections=[Connection|ID])?
		('description' description=Description)?
		('outgoingConnections' '{' outgoingConnections+=Connection ( "," outgoingConnections+=Connection)* '}' )?
		('parameterValues' '{' parameterValues+=ParameterValue ( "," parameterValues+=ParameterValue)* '}' )?
    '}';

Connection returns Connection:
	'Connection'
	name=ID
	'{'
		'sourcePort' sourcePort=[Port|ID]
		'targetComponent' targetComponent=[Component|ID]
		('description' description=Description)?
    '}';
 
ParameterValue returns ParameterValue:
	'ParameterValue'
	name=ID
	'{'
		('value' value=STRING)?
		'type' type=[Parameter|ID]
		('description' description=Description)?
    '}';
 
Platform returns Platform:
	'Platform'
	name=ID
	'{'
		('description' description=Description)?
		'componentTypes' '{' componentTypes+=ComponentType ( "," componentTypes+=ComponentType)* '}' 
		('interfaces' '{' interfaces+=Interface ( "," interfaces+=Interface)* '}' )?
    '}';


ComponentType returns ComponentType:
	{ComponentType}
	'ComponentType'
	name=ID
	'{'
		('providedInterfaces' '(' providedInterfaces+=[Interface|ID] ( "," providedInterfaces+=[Interface|ID])* ')' )?
		('description' description=Description)?
		('ports' '{' ports+=Port ( "," ports+=Port)* '}' )?
		('parameters' '{' parameters+=Parameter ( "," parameters+=Parameter)* '}' )?
    '}';

Interface returns Interface:
	{Interface}
	'Interface'
	name=ID
	'{'
		('providingComponentTypes' '(' providingComponentTypes+=[ComponentType|ID] ( "," providingComponentTypes+=[ComponentType|ID])* ')' )?
		('requiringPorts' '(' requiringPorts+=[Port|ID] ( "," requiringPorts+=[Port|ID])* ')' )?
		('description' description=Description)?
    '}';

Port returns Port:
	'Port'
	name=ID
	'{'
		'minProviderCount' minProviderCount=Integer
		'maxProviderCount' maxProviderCount=Integer
		'requiredInterface' requiredInterface=[Interface|ID]
		('description' description=Description)?
    '}';

Parameter returns Parameter:
	{Parameter}
	(optional?='optional')?
	'Parameter'
	name=ID
	'{'
		('dataType' dataType=STRING)?
		('description' description=Description)?
    '}';

Integer : 
	'-'? INT;

Boolean :
	'true' | 'false';

Identifiable :
	idantifiable = ( STRING | ID );

Description:
	description = STRING;


